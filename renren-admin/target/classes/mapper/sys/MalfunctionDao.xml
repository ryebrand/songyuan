<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.sys.dao.MalfunctionDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.sys.entity.MalfunctionEntity" id="malfunctionMap">
        <result property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="defectLevel" column="defect_level"/>
        <result property="faultDescription" column="fault_description"/>
        <result property="otherFaultDescription" column="other_fault_description"/>
        <result property="image" column="image"/>
        <result property="processingStatus" column="processing_status"/>
        <result property="createTime" column="create_time"/>
        <result property="deleteStatus" column="delete_status"/>
    </resultMap>
    <select id="getMalfunctionById" parameterType="long" resultMap="malfunctionMap">
        select t.id,t.type,t.defect_level,t.fault_description,t.other_fault_description,t.image,t.processing_status,t.create_time,t.delete_status from malfunction t where t.id=#{id} order by t.create_time desc limit 1;
    </select>
    <select id="getDefectLevelById" parameterType="long" resultMap="malfunctionMap">
        select t.type,t.defect_level,t.fault_description,t.other_fault_description,t.image,t.processing_status from malfunction t where t.id=#{id} order by t.create_time limit 1;
    </select>
    <select id="getCountByCondition" resultMap="malfunctionMap">
        select count(t.id) from malfunction t
        <where>
            <if test="t.type!=null and t.type!=-1">
                t.type=#{type}
            </if>
            <if test="t.defect_level!=null and t.defect_level!=-1">
                and t.defect_level=#{defectLevel}
            </if>
            <if test="t.processing_status!=null and t.processing_status!=-1">
                and t.processing_status=#{processingStatus}
            </if>
        </where>
    </select>


    <select id="pageList" resultType="io.renren.modules.sys.dto.MalfunctionInfoDto">

        SELECT
        malfunction.id,
        malfunction.type,
        malfunction.defect_level,
        malfunction.fault_description,
        malfunction.other_fault_description,
        malfunction.image,
        malfunction.processing_status,
        malfunction.create_time,
        ht_user.user_id as ht_user_id,
        ht_user.user_name,
        ht_user.elec_address,
        equipment_owner.`name`,
        equipment_owner.phone_number,
        equipment_owner.studio_camera
        FROM
        malfunction
        LEFT JOIN inspection ON inspection.malfunction_id = malfunction.id
        LEFT JOIN acceptance ON acceptance.malfunction_id = malfunction.id
        LEFT JOIN ht_user ON inspection.ht_user_id = ht_user.user_id
        OR acceptance.asset_number = ht_user.user_id
        LEFT JOIN equipment_owner ON equipment_owner.id = ht_user.check_user
        where malfunction.defect_level != 0

        <if test="start!=null  and start!='' and end!=null  and end!=''">
            AND malfunction.create_time BETWEEN #{start}
            AND #{end}
        </if>
        <if test="types!=null">
            AND malfunction.type IN
            <foreach collection="types" item="type" index="index" open="(" close=")" separator=",">
                #{type}
            </foreach>
        </if>
        <if test="levels!= null">
            AND malfunction.defect_level IN
            <foreach collection="levels" item="level" index="index" open="(" close=")" separator=",">
                #{level}
            </foreach>
        </if>
        <if test="statuses!=null">
            AND malfunction.processing_status IN
            <foreach collection="statuses" item="status" index="index" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </if>
        ORDER BY malfunction.create_time DESC


    </select>

    <select id="selectByMalfunctionId" resultType="io.renren.modules.sys.dto.MalfunctionInfoDto">
        SELECT
        malfunction.id,
        malfunction.type,
        malfunction.defect_level,
        malfunction.fault_description,
        malfunction.other_fault_description,
        malfunction.image,
        malfunction.accept_image,
        malfunction.processing_status,
        malfunction.create_time,

        ht_user.user_id as ht_user_id,
        ht_user.elec_address,

        tb_user.username as check_user_name,
        tb_user.mobile
        FROM
        malfunction
        LEFT JOIN inspection ON inspection.malfunction_id = malfunction.id
        LEFT JOIN acceptance ON acceptance.malfunction_id = malfunction.id
        LEFT JOIN ht_user ON inspection.ht_user_id = ht_user.user_id
        OR acceptance.asset_number = ht_user.user_id
        LEFT JOIN tb_user ON tb_user.user_id = ht_user.check_user
        <where>
            <if test="id!=null">
                malfunction.id=#{id}
            </if>
        </where>

        <!--SELECT
        malfunction.id,
        malfunction.type,
        malfunction.defect_level,
        malfunction.fault_description,
        malfunction.other_fault_description,
        malfunction.image,
        malfunction.processing_status,
        malfunction.create_time,
        meter_box.meter_box_asset_number,
        meter_box.tai_area_name,
        meter_box.address,
        meter_box.meter_box_status,
        equipment_owner.`name`,
        equipment_owner.phone_number,
        equipment_owner.studio_camera
        FROM
        malfunction
        LEFT JOIN inspection ON inspection.malfunction_id = malfunction.id
        LEFT JOIN acceptance ON acceptance.malfunction_id = malfunction.id
        LEFT JOIN meter_box ON inspection.meter_box_id = meter_box.id
        OR acceptance.asset_number = meter_box.meter_box_asset_number
        LEFT JOIN equipment_owner ON equipment_owner.id = meter_box.equipment_owner_id
        <where>
            <if test="id!=null">
                malfunction.id=#{id}
            </if>
        </where>-->
    </select>

    <select id="countByProcessingStatus" resultType="io.renren.modules.sys.dto.MalfunctionStatics">
        SELECT
        date_format( create_time, '%m' ) mont,
        count( * ) count
        FROM
        malfunction
        <where>
            <if test="processingStatus!=null">
                processing_status = #{processingStatus}
            </if>
        </where>
        GROUP BY
        date_format( create_time, '%m' )
        ORDER BY mont ASC
    </select>


    <select id="selectTopSix" resultType="io.renren.modules.sys.dto.FaultReminderDto">
        SELECT
            malfunction.id,
            malfunction.defect_level,
            malfunction.create_time,
            ht_user.user_name,
            ht_user.check_date_before
        FROM
            malfunction
            LEFT JOIN acceptance ON malfunction.id = acceptance.malfunction_id
            LEFT JOIN inspection ON inspection.malfunction_id = malfunction.id
            LEFT JOIN ht_user ON ( ht_user.user_id = inspection.ht_user_id OR ht_user.user_id = acceptance.asset_number )
        ORDER BY
            ht_user.check_date_before desc
            LIMIT 10
    </select>


    <select id="getDefectLevelByTime" resultType="int">
        <!--
        select (temp1.count+temp2.count) as count from (select count(t2.id) as count from inspection t1,malfunction
        t2,meter_box t3 where t1.malfunction_id=t2.id and t1.meter_box_id=t3.id and t2.defect_level=#{defectLevel} and
        t3.tai_area_name=#{taiAreaName} and t3.power_supply=#{powerSupply} and t2.create_time BETWEEN #{startTime} and
        #{endTime}) as temp1,(select count(t2.id) as count from acceptance
        t1,malfunction t2,meter_box t3 where t1.malfunction_id=t2.id and t1.asset_number=t3.meter_box_asset_number and
        t2.defect_level=#{defectLevel} and t3.tai_area_name=#{taiAreaName} and t3.power_supply=#{powerSupply} and
        t2.create_time BETWEEN #{startTime} and #{endTime}) as temp2-->
        select count(t2.id) as count from inspection t1,malfunction
        t2,meter_box t3 where t1.malfunction_id=t2.id and t1.meter_box_id=t3.id and t2.type=0
        and t2.defect_level=#{defectLevel} and t3.tai_area_name=#{taiAreaName}
        and t3.power_supply=#{powerSupply} and t2.create_time BETWEEN #{startTime} and #{endTime}
    </select>
    <select id="getProcessingStatus" resultType="int">
        <!--select t3.tai_area_name,t3.power_supply,t2.processing_status,count(t2.id) as count from inspection t1,malfunction t2,meter_box t3 where t1.malfunction_id=t2.id and t1.meter_box_id=t3.id and t2.processing_status=#{processingStatus} and t2.create_time BETWEEN #{startTime} and #{endTime} GROUP BY t3.tai_area_name,t3.power_supply
        union
        select t3.tai_area_name,t3.power_supply,t2.processing_status,count(t2.id) as count from acceptance t1,malfunction t2,meter_box t3 where t1.malfunction_id=t2.id and t1.asset_number=t3.meter_box_asset_number and t2.processing_status=#{processingStatus} and t2.create_time BETWEEN #{startTime} and #{endTime} GROUP BY t3.tai_area_name,t3.power_supply
    -->
        select (temp1.count+temp2.count) as count from (select count(t2.id) as count from inspection t1,malfunction
        t2,meter_box t3 where t1.malfunction_id=t2.id and t1.meter_box_id=t3.id and
        t2.processing_status=#{processingStatus} and
        t3.tai_area_name=#{taiAreaName} and t3.power_supply=#{powerSupply} and t2.create_time BETWEEN #{startTime} and
        #{endTime}) as temp1,(select count(t2.id) as count from acceptance
        t1,malfunction t2,meter_box t3 where t1.malfunction_id=t2.id and t1.asset_number=t3.meter_box_asset_number and
        t2.processing_status=#{processingStatus} and t3.tai_area_name=#{taiAreaName} and t3.power_supply=#{powerSupply}
        and
        t2.create_time BETWEEN #{startTime} and #{endTime}) as temp2
    </select>


    <select id="groupByDefectLevel" resultType="io.renren.modules.sys.dto.DefectLevelGroupDto">
        SELECT
            defect_level,
            count( 1 ) AS count
        FROM
            malfunction
        GROUP BY
            defect_level
    </select>

    <select id="getCountByUser" resultType="integer">
        select count(*) from malfunction,inspection
        where malfunction.id = inspection.malfunction_id
        AND user_id = #{userId}
    </select>
</mapper>